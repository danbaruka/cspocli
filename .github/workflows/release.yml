name: Release

on:
  push:
    tags:
      - "v*"

jobs:
  release:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.11"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install build twine

      - name: Get version from tag
        id: get_version
        run: |
          VERSION=${GITHUB_REF#refs/tags/}
          echo "version=$VERSION" >> $GITHUB_OUTPUT
          echo "VERSION=$VERSION" >> $GITHUB_ENV

      - name: Update version in files
        run: |
          # Update setup.py
          sed -i "s/version='[^']*'/version='$VERSION'/" setup.py

          # Update pyproject.toml
          sed -i "s/version = \"[^\"]*\"/version = \"$VERSION\"/" pyproject.toml

          # Update __init__.py
          sed -i "s/__version__ = '[^']*'/__version__ = '$VERSION'/" cardano_spo_cli/__init__.py

      - name: Build package
        run: |
          python -m build

      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            dist/*.whl
            dist/*.tar.gz
          body: |
            ## Cardano SPO CLI ${{ steps.get_version.outputs.version }}

            ### üöÄ New Features
            - Professional Cardano stake pool operator CLI
            - Real Cardano tools integration (cardano-cli, cardano-address)
            - Multi-network support (mainnet, testnet, preview, preprod)
            - Global installation with `make install`
            - Secure wallet generation with BIP39 mnemonics
            - Address verification and cross-validation
            - Encrypted ZIP export functionality

            ### üì¶ Installation
            ```bash
            git clone https://github.com/danbaruka/cspocli.git
            cd cspocli
            make install
            ```

            ### üéØ Usage
            ```bash
            # Generate mainnet wallet
            cspocli generate --ticker MYPOOL --purpose pledge

            # Generate testnet wallet
            cspocli generate --ticker MYPOOL --purpose pledge --network testnet

            # Check version
            cspocli version
            ```

            ### üîß Features
            - ‚úÖ Real Cardano tools integration
            - ‚úÖ Multi-platform support (Linux, macOS, Windows)
            - ‚úÖ ARM64 compatibility with fallbacks
            - ‚úÖ Professional installation scripts
            - ‚úÖ Comprehensive documentation
            - ‚úÖ Automated testing

            ### üìö Documentation
            - [README.md](README.md) - Quick start guide
            - [USAGE.md](USAGE.md) - Detailed usage instructions
            - [REAL_TOOLS.md](REAL_TOOLS.md) - Manual tool installation
            - [docs/](docs/) - Command reference and features

            ### üîí Security
            - BIP39 recovery phrases (24 words)
            - Secure file permissions (600)
            - Local storage only
            - No network communication

            ### üõ†Ô∏è Development
            - Python 3.7+ required
            - Uses real cardano-cli and cardano-address tools
            - Graceful fallback to simplified mode
            - Professional CLI interface

            ### üìà Changelog
            See [git log](https://github.com/danbaruka/cspocli/commits) for detailed changes.

            ### ü§ù Contributing
            Contributions welcome! Please read our contributing guidelines.

            ### üìÑ License
            MIT License - see [LICENSE](LICENSE) file for details.
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.9, 3.10, 3.11]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pytest

      - name: Run tests
        run: |
          python test_cli.py

  build-test:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.11"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install build

      - name: Build package
        run: |
          python -m build

      - name: Test installation
        run: |
          pip install dist/*.whl
          cspocli --help
